version: "3.6"

services:
  format:
    build:
      context: .
      args:
        - target=.[development]
    command: black -l 79 --py36 rest_framework_recaptcha
    volumes:
      - .:/usr/src/app

  check-format:
    build:
      context: .
      args:
        - target=.[development]
    command: black -l 79 --py36 --check rest_framework_recaptcha

  style:
    build:
      context: .
      args:
        - target=.[development]
    command: flake8 rest_framework_recaptcha

  complexity:
    build:
      context: .
      args:
        - target=.[development]
    command: xenon --max-absolute B --max-modules A --max-average A rest_framework_recaptcha

  test-unit:
    build:
      context: .
      args:
        - target=.[development]
    command: py.test -s tests/unit -vv --cov . --cov-config .coveragerc --cov-report term-missing --cov-report xml:reports/coverage.xml --cov-report html:reports/coverage.html
    volumes:
      - ./reports:/usr/src/app/reports

  test-all:
    build:
      context: .
      args:
        - target=.[development]
    command: tox

  build-docs:
    build:
      context: .
      args:
        - target=.[development]
    command: /bin/bash -c "sphinx-apidoc -o docs/ rest_framework_recaptcha && make -C docs clean && make -C docs html"
    volumes:
      - ./:/usr/src/app

  bumpversion-package:
    build:
      context: .
      args:
        - target=.[development]
    command: [ "bumpversion", "${VERSION_PART-patch}" ]
    volumes:
      - ./:/usr/src/app

  build-package:
    build: .
    command: python setup.py sdist bdist_wheel
    volumes:
      - ./:/usr/src/app

  publish-test-package:
    build:
      context: .
      args:
        - target=.[development]
    command: twine upload --repository-url https://test.pypi.org/legacy/ dist/*
    volumes:
      - ./:/usr/src/app

  publish-package:
    build:
      context: .
      args:
        - target=.[development]
    command: twine upload dist/*
    volumes:
      - ./:/usr/src/app

  generate-translations:
    build: .
    command: /bin/bash -c "cd rest_framework_recaptcha && django-admin makemessages --locale=${LOCALE}"
    volumes:
      - ./:/usr/src/app

  update-translations:
    build: .
    command: /bin/bash -c "cd rest_framework_recaptcha && django-admin makemessages --all"
    volumes:
      - ./:/usr/src/app

  compile-translations:
    build: .
    command: /bin/bash -c "cd rest_framework_recaptcha && django-admin compilemessages"
    volumes:
      - ./:/usr/src/app
